<project name="MyProject" default="dist" basedir=".">
  <description>
    simple example build file
  </description>
  <!-- set global properties for this build -->
  <property name="src" location="src"/>
  <property name="test.dir" location="test"/>
  <property name="build" location="build"/>
  <property name="bin" location="bin"/>
  <property name="dist" location="dist"/>
  <property name="junit" location="lib/junit-4.11.jar"/>
  <property name="hamcrest" location="lib/hamcrest-all-1.3.jar"/>
	
  <path id="_classpath">
  	    <pathelement path="${hamcrest}"/>
        <pathelement path="${junit}"/>
        <pathelement path="${build}"/>
  </path>


  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build}"/>
  </target>

  <target name="compile" depends="init"
        description="compile the source">
    <!-- Compile the java code from ${src} into ${build} -->
    <javac includeantruntime="false" srcdir="${src}" destdir="${build}" >
    	<classpath refid="_classpath"/>
    </javac>
  </target>
	
	<target name="compileTest" depends="compile" description="compile jUnit Test cases ">
	    <javac srcdir="${test.dir}" destdir="${bin}" includeantruntime="true" nowarn="yes" debug="true" >
	    	<classpath refid="_classpath"/>
	    </javac>
	</target>
	
	<target name="runTests" description="Run JUnit tests">
	    <junit printsummary="yes" dir="test" fork="true" failureproperty="test.failed">
	    	<classpath>
	    	      <pathelement location="bin" />    
	    		  <pathelement location="lib/hamcrest-all-1.3.jar"/>
	    	      <pathelement location="lib/junit-4.11.jar"/>
	    	 </classpath> 
	        <test name="xxx.AllNonGWTTestCaseTests" haltonfailure="no" outfile="result">
	            <formatter type="xml" />
	        </test>
	    </junit>
		<fail message="Test failure detected, check test results." if="test.failed" />
	</target>
	
	

  <target name="dist" depends="compile"
        description="generate the distribution">
    <!-- Create the distribution directory -->
    <mkdir dir="${dist}/lib"/>

    <!-- Put everything in ${build} into the MyProject-${DSTAMP}.jar file -->
    <jar jarfile="${dist}/lib/MyProject-${DSTAMP}.jar" basedir="${build}">
    	 <manifest>
    	      <attribute name="Main-Class"
    	            value="nl.saxion.dna.Apl"/>
	     </manifest>
	</jar>
  </target>

  <target name="clean"
        description="clean up">
    <!-- Delete the ${build} and ${dist} directory trees -->
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
  </target>
</project>